class puzzlePiece {
  constructor(opts = {
    debug: false
  }){
    this.debug = opts.debug;
  }

  plugTRBL(ctx){
    ctx.beginPath();
    ctx.moveTo(200,200);
    ctx.lineTo(275,200);
    ctx.quadraticCurveTo(250,150,300,150);
    ctx.quadraticCurveTo(350,150,325,200);
    if(this.debug){
      ctx.fillRect(250,150,5,5);
      ctx.fillRect(350,150,5,5);
    }
    ctx.lineTo(400,200);
    ctx.lineTo(400,275);
    ctx.quadraticCurveTo(450,250,450,300);
    ctx.quadraticCurveTo(450,350,400,325);
    if(this.debug){
      ctx.fillRect(450,250,5,5);
      ctx.fillRect(450,350,5,5);
    }
    ctx.lineTo(400,400);
    ctx.lineTo(325,400);
    ctx.quadraticCurveTo(350,450,300,450);
    ctx.quadraticCurveTo(250,450,275,400);
    if(this.debug){
      ctx.fillRect(350,450,5,5);
      ctx.fillRect(250,450,5,5);
    }
    ctx.lineTo(200,400);
    ctx.lineTo(200,325);
    ctx.quadraticCurveTo(150,350,150,300);
    ctx.quadraticCurveTo(150,250,200,275);
    if(this.debug){
      ctx.fillRect(150,350,5,5);
      ctx.fillRect(150,250,5,5);
    }
    ctx.lineTo(200,200);
    ctx.closePath();
    ctx.stroke();
  }

  plugTBsocketRL(ctx){
    ctx.beginPath();
    ctx.moveTo(200,200);
    ctx.lineTo(275,200);
    ctx.quadraticCurveTo(250,150,300,150);
    ctx.quadraticCurveTo(350,150,325,200);
    if(this.debug){
      ctx.fillRect(250,150,5,5)
      ctx.fillRect(350,150,5,5)
    }
    ctx.lineTo(400,200);
    ctx.lineTo(400,275);
    ctx.quadraticCurveTo(350,250,350,300);
    ctx.quadraticCurveTo(350,350,400,325);
    if(this.debug){
      ctx.fillRect(350,250,5,5)
      ctx.fillRect(350,350,5,5)
    }
    ctx.lineTo(400,400);
    ctx.lineTo(325,400);
    ctx.quadraticCurveTo(350,450,300,450);
    ctx.quadraticCurveTo(250,450,275,400);
    if(this.debug){
      ctx.fillRect(350,450,5,5)
      ctx.fillRect(250,450,5,5)
    }
    ctx.lineTo(200,400);
    ctx.lineTo(200,325);
    ctx.quadraticCurveTo(150,350,150,300);
    ctx.quadraticCurveTo(150,250,200,275);
    if(this.debug){
      ctx.fillRect(150,350,5,5)
      ctx.fillRect(150,250,5,5)
    }
    ctx.lineTo(200,200);
    ctx.closePath();
    ctx.stroke();
  }

  plugRBLsocketT(ctx){
    ctx.beginPath();
    ctx.moveTo(200,200);
    ctx.lineTo(275,200);
    ctx.quadraticCurveTo(250,250,300,250);
    ctx.quadraticCurveTo(350,250,325,200);
    ctx.lineTo(400,200);
    ctx.lineTo(400,275);
    ctx.quadraticCurveTo(450,250,450,300);
    ctx.quadraticCurveTo(450,350,400,325);
    ctx.lineTo(400,400);
    ctx.lineTo(325,400);
    ctx.quadraticCurveTo(350,450,300,450);
    ctx.quadraticCurveTo(250,450,275,400);
    ctx.lineTo(200,400);
    ctx.lineTo(200,325);
    ctx.quadraticCurveTo(150,350,150,300);
    ctx.quadraticCurveTo(150,250,200,275);
    ctx.lineTo(200,200);
    ctx.closePath();
    ctx.stroke();
  }

  plugBLsocketTR(ctx){
    console.log(this.debug);
    
    ctx.beginPath();
    ctx.moveTo(200,200);
    ctx.lineTo(275,200);
    ctx.quadraticCurveTo(250,250,300,250);
    ctx.quadraticCurveTo(350,250,325,200);
    ctx.lineTo(400,200);
    ctx.lineTo(400,275);
    ctx.quadraticCurveTo(350,250,350,300);
    ctx.quadraticCurveTo(350,350,400,325);
    ctx.lineTo(400,400);
    ctx.lineTo(325,400);
    ctx.quadraticCurveTo(350,450,300,450);
    ctx.quadraticCurveTo(250,450,275,400);
    ctx.lineTo(200,400);
    ctx.lineTo(200,325);
    ctx.quadraticCurveTo(150,350,150,300);
    ctx.quadraticCurveTo(150,250,200,275);
    ctx.lineTo(200,200);
    ctx.closePath();
    ctx.stroke();
  }
}

export default puzzlePiece;
